(*Generated by Lem from abis/mips64/abi_mips64_section_header_table.lem.*)
(** [abi_mips64_section_header_table] module contains section header table
  * specific definitions for the MIPS64 ABI.
  *)

open Lem_basic_classes
open Lem_map
open Lem_num

open Elf_section_header_table

(** MIPS64 specific flags.  See Section XXX FIXME. *)

(** MIPS64 specific section types.  See Section XXX FIXME *)

(** [string_of_abi_mips64_section_type m] produces a string based representation
  * of MIPS64 section type [m].
  *)
(*val string_of_abi_mips64_section_type : natural -> string*)
let string_of_abi_mips64_section_type m:string= 
  "Invalid MIPS64 section type"
    
(** Special sections *)

(*val abi_mips64_special_sections : Map.map string (natural * natural)*)
let abi_amg64_special_sections0:((string),(Nat_big_num.num*Nat_big_num.num))Pmap.map=  
 (Lem_map.fromList (instance_Map_MapKeyType_var_dict instance_Basic_classes_SetType_var_dict) [
    (".got", (sht_progbits, Nat_big_num.add shf_alloc shf_write))
  ; (".plt", (sht_progbits, Nat_big_num.add shf_alloc shf_execinstr))
  (* FIXME ; (".eh_frame", (sht_abi_mips64_unwind, shf_alloc)) *)
  ])
  
(*val abi_mips64_special_sections_large_code_model : Map.map string (natural * natural)*)
let abi_mips64_special_sections_large_code_model:((string),(Nat_big_num.num*Nat_big_num.num))Pmap.map=  
 (Lem_map.fromList (instance_Map_MapKeyType_var_dict instance_Basic_classes_SetType_var_dict) [
    (* FIXME *)
  ])
