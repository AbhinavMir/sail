\providecommand\saildoclabelled[2]{\phantomsection\label{#1}#2}
\providecommand\saildocval[2]{#1 #2}
\providecommand\saildocfcl[2]{#1 #2}
\providecommand\saildoctype[2]{#1 #2}
\providecommand\saildocfn[2]{#1 #2}
\providecommand\saildocoverload[2]{#1 #2}
\providecommand\saildocabbrev[1]{#1\@}
\providecommand\saildoclet[2]{#1 #2}
\providecommand\saildocregister[2]{#1 #2}

\newcommand{\sailvaleqUnit}{\saildoclabelled{sailzeqzyunit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_unit996f84433ac0995f4aadfca5b68cd358.tex}}}}

\newcommand{\sailvaleqBit}{\saildoclabelled{sailzeqzybit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_bit7182cc37406e2c0d4c1e739a98e248ea.tex}}}}

\newcommand{\sailfneqUnit}{\saildoclabelled{sailfnzeqzyunit}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzeq_unit996f84433ac0995f4aadfca5b68cd358.tex}}}}

\newcommand{\sailvalnotBool}{\saildoclabelled{sailznotzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valznot_boole1dd3e44bc87a2a10d8e257004c2d36a.tex}}}}

\newcommand{\sailvalandBool}{\saildoclabelled{sailzandzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzand_boola4a2cf9ccaa44106300961b15ab20e79.tex}}}}

\newcommand{\sailvalandBoolNoFlow}{\saildoclabelled{sailzandzyboolzynozyflow}{\saildocval{}{\lstinputlisting[language=sail]{out/valzand_bool_no_flow5d5041fa8ff689136cdc03e3a11eda3a.tex}}}}

\newcommand{\sailvalorBool}{\saildoclabelled{sailzorzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzor_bool5f07f9d72d4d1495c45a3531c787546a.tex}}}}

\newcommand{\sailvaleqInt}{\saildoclabelled{sailzeqzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_int364a98dbf8a9faa70e666cce41d8c1aa.tex}}}}

\newcommand{\sailvaleqBool}{\saildoclabelled{sailzeqzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_bool0e93587306381c3f984dc7cea6ae190d.tex}}}}

\newcommand{\sailvalneqInt}{\saildoclabelled{sailzneqzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzneq_int4fd2be7a83f27bec736b67bdbab1d8c6.tex}}}}

\newcommand{\sailfnneqInt}{\saildoclabelled{sailfnzneqzyint}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzneq_int4fd2be7a83f27bec736b67bdbab1d8c6.tex}}}}

\newcommand{\sailvalneqBool}{\saildoclabelled{sailzneqzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzneq_bool40d90a9f3b3bd9e0f1966f198535e779.tex}}}}

\newcommand{\sailfnneqBool}{\saildoclabelled{sailfnzneqzybool}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzneq_bool40d90a9f3b3bd9e0f1966f198535e779.tex}}}}

\newcommand{\sailvallteqInt}{\saildoclabelled{sailzlteqzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzlteq_intc80d1082e443aa434e39355e493ece1e.tex}}}}

\newcommand{\sailvalgteqInt}{\saildoclabelled{sailzgteqzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzgteq_inte32033a8d137f46d187455cff7dbe40e.tex}}}}

\newcommand{\sailvalltInt}{\saildoclabelled{sailzltzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzlt_int996a8b8c361a31bed6b5509ca6686e1a.tex}}}}

\newcommand{\sailvalgtInt}{\saildoclabelled{sailzgtzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzgt_intef94a8c66f39b1f715cb72941ed95921.tex}}}}

\newcommand{\sailoverloadBzEightoperatorzZerozJzJzNine}{\saildoclabelled{sailoverloadBzz8operatorz0zJzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBzz8operatorz0zjzjz9c650f45e06411dd4e97578ff2bad6338.tex}}}}

\newcommand{\sailoverloadCzEightoperatorzZerozOnezJzNine}{\saildoclabelled{sailoverloadCzz8operatorz0z1zJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadCzz8operatorz0z1zjz981ebe433e26f9e2dfa2a9d2c7f4fe1f4.tex}}}}

\newcommand{\sailoverloadDzEightoperatorzZerozUzNine}{\saildoclabelled{sailoverloadDzz8operatorz0zUz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadDzz8operatorz0zuz99af95b281314726fa91893b57fc290dc.tex}}}}

\newcommand{\sailoverloadEzEightoperatorzZerozSixzNine}{\saildoclabelled{sailoverloadEzz8operatorz0z6z9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadEzz8operatorz0z6z9d3731bb9b1c9d765858778ad48ba6b3a.tex}}}}

\newcommand{\sailoverloadFzEightoperatorzZerozIzJzNine}{\saildoclabelled{sailoverloadFzz8operatorz0zIzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadFzz8operatorz0zizjz95c366628fed7d8b7c251f1acd527ee3b.tex}}}}

\newcommand{\sailoverloadGzEightoperatorzZerozIzNine}{\saildoclabelled{sailoverloadGzz8operatorz0zIz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadGzz8operatorz0ziz9714b8c400aed24ebd80eac39b4f9d751.tex}}}}

\newcommand{\sailoverloadHzEightoperatorzZerozKzJzNine}{\saildoclabelled{sailoverloadHzz8operatorz0zKzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadHzz8operatorz0zkzjz94161e4bfad2d20e5d25bc774612b6588.tex}}}}

\newcommand{\sailoverloadIzEightoperatorzZerozKzNine}{\saildoclabelled{sailoverloadIzz8operatorz0zKz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadIzz8operatorz0zkz93747e4d4a6f99eb3fca0b477d2437ed5.tex}}}}

\newcommand{\sailvalId}{\saildoclabelled{sailzzyzyid}{\saildocval{}{\lstinputlisting[language=sail]{out/valz__ided888b8991a27578d5dd72f84db80bce.tex}}}}

\newcommand{\sailfnId}{\saildoclabelled{sailfnzzyzyid}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnz__ided888b8991a27578d5dd72f84db80bce.tex}}}}

\newcommand{\sailoverloadJSizze}{\saildoclabelled{sailoverloadJzzyzysizze}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadJz__sizze5b2e36a5dbb42eaba80b4d164e45d3ae.tex}}}}

\newcommand{\sailvalDeref}{\saildoclabelled{sailzzyzyderef}{\saildocval{}{\lstinputlisting[language=sail]{out/valz__deref1dbc379e24bd1b182e1db755dea8c453.tex}}}}

\newcommand{\sailvalBitfieldDeref}{\saildoclabelled{sailzzyzybitfieldzyderef}{\saildocval{}{\lstinputlisting[language=sail]{out/valz__bitfield_deref5ed587b7c1b91cf82e42f865304262ca.tex}}}}

\newcommand{\sailtypebits}{\saildoclabelled{sailtypezbits}{\saildoctype{}{\lstinputlisting[language=sail]{out/typezbitsa4b31f9b3dc11c921007b665e0d0fce6.tex}}}}



\newcommand{\sailvaleqBits}{\saildoclabelled{sailzeqzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_bits886ce7cf3ec93a28308e8d4e9d63f4be.tex}}}}

\newcommand{\sailoverloadKzEightoperatorzZerozJzJzNine}{\saildoclabelled{sailoverloadKzz8operatorz0zJzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadKzz8operatorz0zjzjz9c650f45e06411dd4e97578ff2bad6338.tex}}}}

\newcommand{\sailvalbitvectorLength}{\saildoclabelled{sailzbitvectorzylength}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_lengthcd74a5cced7567d19500671e4b6e1031.tex}}}}

\newcommand{\sailvalvectorLength}{\saildoclabelled{sailzvectorzylength}{\saildocval{}{\lstinputlisting[language=sail]{out/valzvector_length9ee541b308cdfd9738d44bfb3dff4b46.tex}}}}

\newcommand{\sailoverloadLlength}{\saildoclabelled{sailoverloadLzlength}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadLzlength469e3f917f7b24f4691faf3caf842eba.tex}}}}

\newcommand{\sailvalzzeros}{\saildoclabelled{sailzzzeros}{\saildocval{}{\lstinputlisting[language=sail]{out/valzzzerosc530711942e216cef3921733c1c5d101.tex}}}}

\newcommand{\sailvalprintBits}{\saildoclabelled{sailzprintzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzprint_bits30cf225474fbf3e575d7aa83aa309559.tex}}}}

\newcommand{\sailvalsignExtend}{\saildoclabelled{sailzsignzyextend}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsign_extendd299e34344c466213b3253f0d877453d.tex}}}}

\newcommand{\sailvalzzeroExtend}{\saildoclabelled{sailzzzerozyextend}{\saildocval{}{\lstinputlisting[language=sail]{out/valzzzero_extendd7d8b08ed1667724fd3dfa843cf0ae78.tex}}}}

\newcommand{\sailvaltruncate}{\saildoclabelled{sailztruncate}{\saildocval{}{\lstinputlisting[language=sail]{out/valztruncatea666e28ae0c8ca7327a2b3fcd1ed4ec7.tex}}}}

\newcommand{\sailvalmask}{\saildoclabelled{sailzmask}{\saildocval{}{\lstinputlisting[language=sail]{out/valzmask357329ae84e03dd27d4454a1873fc3dd.tex}}}}

\newcommand{\sailfnmask}{\saildoclabelled{sailfnzmask}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzmask357329ae84e03dd27d4454a1873fc3dd.tex}}}}

\newcommand{\sailoverloadMzEightoperatorzZerozQzNine}{\saildoclabelled{sailoverloadMzz8operatorz0zQz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadMzz8operatorz0zqz9ccbd65071d8f0fbb9677c7f6e86d3527.tex}}}}

\newcommand{\sailvalbitvectorConcat}{\saildoclabelled{sailzbitvectorzyconcat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_concat6176f8be1468d8779ee8370fd3b4a6e0.tex}}}}

\newcommand{\sailoverloadNappend}{\saildoclabelled{sailoverloadNzappend}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadNzappend88575169e0ec1639b6ae3851df999710.tex}}}}

\newcommand{\sailvalappendSixFour}{\saildoclabelled{sailzappendzy64}{\saildocval{}{\lstinputlisting[language=sail]{out/valzappend_6433ef192058d4bf5f092d6f8b6d97f4c4.tex}}}}

\newcommand{\sailvalbitvectorAccess}{\saildoclabelled{sailzbitvectorzyaccess}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_access8b584ca86770abb6b0da5ef059a02ed9.tex}}}}

\newcommand{\sailvalplainVectorAccess}{\saildoclabelled{sailzplainzyvectorzyaccess}{\saildocval{}{\lstinputlisting[language=sail]{out/valzplain_vector_access792547dd734d4ff2e6078cbb88967469.tex}}}}

\newcommand{\sailoverloadOvectorAccess}{\saildoclabelled{sailoverloadOzvectorzyaccess}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadOzvector_accessbe81ec250d2df2ebadde393ea37a85a4.tex}}}}

\newcommand{\sailvalbitvectorUpdate}{\saildoclabelled{sailzbitvectorzyupdate}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_update20826799a1ff3ff40895206db0df14bb.tex}}}}

\newcommand{\sailvalplainVectorUpdate}{\saildoclabelled{sailzplainzyvectorzyupdate}{\saildocval{}{\lstinputlisting[language=sail]{out/valzplain_vector_updateb31d67bfe51b1a6f79983347dfc57da0.tex}}}}

\newcommand{\sailoverloadPvectorUpdate}{\saildoclabelled{sailoverloadPzvectorzyupdate}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadPzvector_updateb14d5207ae01ed7fc9d9882c9cc3ebef.tex}}}}

\newcommand{\sailvaladdBits}{\saildoclabelled{sailzaddzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzadd_bits24373ffc11f289d5bb648df2f4f41b25.tex}}}}

\newcommand{\sailvaladdBitsInt}{\saildoclabelled{sailzaddzybitszyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzadd_bits_inta5424052402522ff4653275c899f7543.tex}}}}

\newcommand{\sailoverloadQzEightoperatorzZerozBzNine}{\saildoclabelled{sailoverloadQzz8operatorz0zBz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadQzz8operatorz0zbz9a2d0168f574b152e5f31357e86602c16.tex}}}}

\newcommand{\sailvalsubrangeBits}{\saildoclabelled{sailzsubrangezybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsubrange_bits6c497c14df4f4754bd345a6c56ca2aad.tex}}}}

\newcommand{\sailoverloadRvectorSubrange}{\saildoclabelled{sailoverloadRzvectorzysubrange}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadRzvector_subrange270c799ffa6c20b5244f22c64fba0367.tex}}}}

\newcommand{\sailvalupdateSubrangeBits}{\saildoclabelled{sailzupdatezysubrangezybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzupdate_subrange_bitsb5ffe862b26310b45a779cd45bbf041e.tex}}}}

\newcommand{\sailoverloadSvectorUpdateSubrange}{\saildoclabelled{sailoverloadSzvectorzyupdatezysubrange}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadSzvector_update_subrangeb77be803268d55f5f112399f9d0dfbc2.tex}}}}

\newcommand{\sailvalreplicateBits}{\saildoclabelled{sailzreplicatezybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzreplicate_bitsb29bdab6bb9437712accf2dc81ea3d3e.tex}}}}

\newcommand{\sailvalunsigned}{\saildoclabelled{sailzunsigned}{\saildocval{}{\lstinputlisting[language=sail]{out/valzunsigned1010eda2cdd2666cd8fd0ddf82ac526f.tex}}}}

\newcommand{\sailvalsigned}{\saildoclabelled{sailzsigned}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsigned36d2317f34f1dacb4e465e6e56b185e6.tex}}}}

\newcommand{\sailvaladdAtom}{\saildoclabelled{sailzaddzyatom}{\saildocval{}{\lstinputlisting[language=sail]{out/valzadd_atomd34efc9e611b6d3b6757e17f4932b12b.tex}}}}

\newcommand{\sailvaladdInt}{\saildoclabelled{sailzaddzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzadd_intb17710be4fd02ace68d83b9dba907034.tex}}}}

\newcommand{\sailoverloadTzEightoperatorzZerozBzNine}{\saildoclabelled{sailoverloadTzz8operatorz0zBz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadTzz8operatorz0zbz9a2d0168f574b152e5f31357e86602c16.tex}}}}

\newcommand{\sailvalsubAtom}{\saildoclabelled{sailzsubzyatom}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsub_atom328a68dfbab1a07c42d4e7b98eac766f.tex}}}}

\newcommand{\sailvalsubInt}{\saildoclabelled{sailzsubzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsub_intf17f348f33594e77fdc3ef8b6a46b569.tex}}}}

\newcommand{\sailoverloadUzEightoperatorzZerozDzNine}{\saildoclabelled{sailoverloadUzz8operatorz0zDz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadUzz8operatorz0zdz9aaaae29f381509679e21c2555127a5dd.tex}}}}

\newcommand{\sailvalsubNat}{\saildoclabelled{sailzsubzynat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsub_nat1e51a6ef44b288dd12f7f69af44dfd3e.tex}}}}

\newcommand{\sailvalnegateAtom}{\saildoclabelled{sailznegatezyatom}{\saildocval{}{\lstinputlisting[language=sail]{out/valznegate_atomfefdbde89b468d9df54837e864426d70.tex}}}}

\newcommand{\sailvalnegateInt}{\saildoclabelled{sailznegatezyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valznegate_int42f776f84c124d77c3e367500082e43f.tex}}}}

\newcommand{\sailoverloadVnegate}{\saildoclabelled{sailoverloadVznegate}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadVznegatef5714e2e9cd970a9cb8b7c6fdf3732b8.tex}}}}

\newcommand{\sailvalmultAtom}{\saildoclabelled{sailzmultzyatom}{\saildocval{}{\lstinputlisting[language=sail]{out/valzmult_atomdbad478b99777b7676dde1f5a7900711.tex}}}}

\newcommand{\sailvalmultInt}{\saildoclabelled{sailzmultzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzmult_inte25d1b032a27b461f0eaf0c84be37a2b.tex}}}}

\newcommand{\sailoverloadWzEightoperatorzZerozAzNine}{\saildoclabelled{sailoverloadWzz8operatorz0zAz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadWzz8operatorz0zaz94d99df7698c53c990108e8f028c06211.tex}}}}

\newcommand{\sailvalprintInt}{\saildoclabelled{sailzprintzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzprint_intfb625bfb7a4021903513aeb4396bd878.tex}}}}

\newcommand{\sailvalprerrInt}{\saildoclabelled{sailzprerrzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzprerr_int00b48f715fbb32df5901801dff63b643.tex}}}}

\newcommand{\sailvalShlEight}{\saildoclabelled{sailzzyshl8}{\saildocval{A common idiom in asl is to take two bits of an opcode and convert in into a variable like

\lstinputlisting[language=sail]{out/blocka2cd1c63e1ba9c2d625830f7e4de8f31.sail}\lstinline{_shl8} ensures that in this case the typechecker knows that the end result will be a value in the set \lstinline`{8, 16, 32, 64}`

Similarly, we define shifts of 32 and 1 (i.e., powers of two).

The most general shift operations also allow negative shifts which go in the opposite direction, for compatibility with ASL.

}{\lstinputlisting[language=sail]{out/valz_shl8e01c74b934d4c323501a597baa8e6f73.tex}}}}

\newcommand{\sailvalShlThreeTwo}{\saildoclabelled{sailzzyshl32}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shl32469ae968a52f81e1a28aeacf7e2d496b.tex}}}}

\newcommand{\sailvalShlOne}{\saildoclabelled{sailzzyshl1}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shl1b261f5995acb90d475c10ee0cdbc12ce.tex}}}}

\newcommand{\sailvalShlInt}{\saildoclabelled{sailzzyshlzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shl_int86f4e1bc3609625860bc16734d7f2614.tex}}}}

\newcommand{\sailvalShrThreeTwo}{\saildoclabelled{sailzzyshr32}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shr328ec48e4bcaebfdbf5c374b77ca7b535b.tex}}}}

\newcommand{\sailvalShrInt}{\saildoclabelled{sailzzyshrzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shr_int34025c843d841a08930cb64bf99a1693.tex}}}}

\newcommand{\sailvalShlIntGeneral}{\saildoclabelled{sailzzyshlzyintzygeneral}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shl_int_generalab86cb298d6e60b48e78627d598f6165.tex}}}}

\newcommand{\sailfnShlIntGeneral}{\saildoclabelled{sailfnzzyshlzyintzygeneral}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnz_shl_int_generalab86cb298d6e60b48e78627d598f6165.tex}}}}

\newcommand{\sailvalShrIntGeneral}{\saildoclabelled{sailzzyshrzyintzygeneral}{\saildocval{}{\lstinputlisting[language=sail]{out/valz_shr_int_generalf06a573ed81aec273a6397188519fd34.tex}}}}

\newcommand{\sailfnShrIntGeneral}{\saildoclabelled{sailfnzzyshrzyintzygeneral}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnz_shr_int_generalf06a573ed81aec273a6397188519fd34.tex}}}}

\newcommand{\sailoverloadXshlInt}{\saildoclabelled{sailoverloadXzshlzyint}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadXzshl_int4772030e3fc0913189e795ec25e86dc5.tex}}}}

\newcommand{\sailoverloadYshrInt}{\saildoclabelled{sailoverloadYzshrzyint}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadYzshr_int5f4032eb21b9c850a9e2a8de5872a2a2.tex}}}}

\newcommand{\sailvaltdivInt}{\saildoclabelled{sailztdivzyint}{\saildocval{Truncating division (rounds towards zero)

}{\lstinputlisting[language=sail]{out/valztdiv_int5e119ac7ab9ff04c8877846f345d1159.tex}}}}

\newcommand{\sailvalTmodInt}{\saildoclabelled{sailzzytmodzyint}{\saildocval{Remainder for truncating division (has sign of dividend)

}{\lstinputlisting[language=sail]{out/valz_tmod_inta2984ba6dbfa10758476d9b3b7f62560.tex}}}}

\newcommand{\sailvalTmodIntPositive}{\saildoclabelled{sailzzytmodzyintzypositive}{\saildocval{If we know the second argument is positive, we know the result is positive

}{\lstinputlisting[language=sail]{out/valz_tmod_int_positive6f0621d972182279e90a43c082e50c10.tex}}}}

\newcommand{\sailoverloadZtmodInt}{\saildoclabelled{sailoverloadZztmodzyint}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadZztmod_int76b131b53b88df8b201279295eacebbe.tex}}}}

\newcommand{\sailvalfdivInt}{\saildoclabelled{sailzfdivzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzfdiv_intd3535e930b3252acc5f18a9e4b34e63a.tex}}}}

\newcommand{\sailfnfdivInt}{\saildoclabelled{sailfnzfdivzyint}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzfdiv_intd3535e930b3252acc5f18a9e4b34e63a.tex}}}}

\newcommand{\sailvalfmodInt}{\saildoclabelled{sailzfmodzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzfmod_int7e215ca2b888f4e92201959fd40958a5.tex}}}}

\newcommand{\sailfnfmodInt}{\saildoclabelled{sailfnzfmodzyint}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzfmod_int7e215ca2b888f4e92201959fd40958a5.tex}}}}

\newcommand{\sailvalabsIntPlain}{\saildoclabelled{sailzabszyintzyplain}{\saildocval{}{\lstinputlisting[language=sail]{out/valzabs_int_plainb54aa4afeed2c86b519a464eb2e4c77c.tex}}}}

\newcommand{\sailoverloadAAabsInt}{\saildoclabelled{sailoverloadAAzabszyint}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAAzabs_intef5fbb521189282054dc80dc7173013d.tex}}}}

\newcommand{\sailtypeoption}{\saildoclabelled{sailtypezoption}{\saildoctype{}{\lstinputlisting[language=sail]{out/typezoptiona3271ef8b6a63c78e6db36dac0ee6547.tex}}}}

\newcommand{\sailvalisNone}{\saildoclabelled{sailziszynone}{\saildocval{}{\lstinputlisting[language=sail]{out/valzis_nonebebf4558161c4d567fb50f7df9e82374.tex}}}}

\newcommand{\sailfnisNone}{\saildoclabelled{sailfnziszynone}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzis_nonebebf4558161c4d567fb50f7df9e82374.tex}}}}

\newcommand{\sailvalisSome}{\saildoclabelled{sailziszysome}{\saildocval{}{\lstinputlisting[language=sail]{out/valzis_some1c925a3fbbb4ddc7f552b6fd691664ee.tex}}}}

\newcommand{\sailfnisSome}{\saildoclabelled{sailfnziszysome}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzis_some1c925a3fbbb4ddc7f552b6fd691664ee.tex}}}}

\newcommand{\sailregistersmall}{\saildoclabelled{sailregisterzsmall}{\saildocregister{}{\lstinputlisting[language=sail]{out/registerzsmall1f2dadee7c54a6dda75948109cacc9d5.tex}}}}

\newcommand{\sailregisterbig}{\saildoclabelled{sailregisterzbig}{\saildocregister{}{\lstinputlisting[language=sail]{out/registerzbig1066534ae1b23930893efa3da0ce3b60.tex}}}}

\newcommand{\sailval}[1]{
  \ifstrequal{#1}{__bitfield_deref}{\sailvalBitfieldDeref}{}%
  \ifstrequal{#1}{\_\_bitfield\_deref}{\sailvalBitfieldDeref}{}%
  \ifstrequal{#1}{__deref}{\sailvalDeref}{}%
  \ifstrequal{#1}{\_\_deref}{\sailvalDeref}{}%
  \ifstrequal{#1}{__id}{\sailvalId}{}%
  \ifstrequal{#1}{\_\_id}{\sailvalId}{}%
  \ifstrequal{#1}{_shl1}{\sailvalShlOne}{}%
  \ifstrequal{#1}{\_shl1}{\sailvalShlOne}{}%
  \ifstrequal{#1}{_shl32}{\sailvalShlThreeTwo}{}%
  \ifstrequal{#1}{\_shl32}{\sailvalShlThreeTwo}{}%
  \ifstrequal{#1}{_shl8}{\sailvalShlEight}{}%
  \ifstrequal{#1}{\_shl8}{\sailvalShlEight}{}%
  \ifstrequal{#1}{_shl_int}{\sailvalShlInt}{}%
  \ifstrequal{#1}{\_shl\_int}{\sailvalShlInt}{}%
  \ifstrequal{#1}{_shl_int_general}{\sailvalShlIntGeneral}{}%
  \ifstrequal{#1}{\_shl\_int\_general}{\sailvalShlIntGeneral}{}%
  \ifstrequal{#1}{_shr32}{\sailvalShrThreeTwo}{}%
  \ifstrequal{#1}{\_shr32}{\sailvalShrThreeTwo}{}%
  \ifstrequal{#1}{_shr_int}{\sailvalShrInt}{}%
  \ifstrequal{#1}{\_shr\_int}{\sailvalShrInt}{}%
  \ifstrequal{#1}{_shr_int_general}{\sailvalShrIntGeneral}{}%
  \ifstrequal{#1}{\_shr\_int\_general}{\sailvalShrIntGeneral}{}%
  \ifstrequal{#1}{_tmod_int}{\sailvalTmodInt}{}%
  \ifstrequal{#1}{\_tmod\_int}{\sailvalTmodInt}{}%
  \ifstrequal{#1}{_tmod_int_positive}{\sailvalTmodIntPositive}{}%
  \ifstrequal{#1}{\_tmod\_int\_positive}{\sailvalTmodIntPositive}{}%
  \ifstrequal{#1}{abs_int_plain}{\sailvalabsIntPlain}{}%
  \ifstrequal{#1}{abs\_int\_plain}{\sailvalabsIntPlain}{}%
  \ifstrequal{#1}{add_atom}{\sailvaladdAtom}{}%
  \ifstrequal{#1}{add\_atom}{\sailvaladdAtom}{}%
  \ifstrequal{#1}{add_bits}{\sailvaladdBits}{}%
  \ifstrequal{#1}{add\_bits}{\sailvaladdBits}{}%
  \ifstrequal{#1}{add_bits_int}{\sailvaladdBitsInt}{}%
  \ifstrequal{#1}{add\_bits\_int}{\sailvaladdBitsInt}{}%
  \ifstrequal{#1}{add_int}{\sailvaladdInt}{}%
  \ifstrequal{#1}{add\_int}{\sailvaladdInt}{}%
  \ifstrequal{#1}{and_bool}{\sailvalandBool}{}%
  \ifstrequal{#1}{and\_bool}{\sailvalandBool}{}%
  \ifstrequal{#1}{and_bool_no_flow}{\sailvalandBoolNoFlow}{}%
  \ifstrequal{#1}{and\_bool\_no\_flow}{\sailvalandBoolNoFlow}{}%
  \ifstrequal{#1}{append_64}{\sailvalappendSixFour}{}%
  \ifstrequal{#1}{append\_64}{\sailvalappendSixFour}{}%
  \ifstrequal{#1}{bitvector_access}{\sailvalbitvectorAccess}{}%
  \ifstrequal{#1}{bitvector\_access}{\sailvalbitvectorAccess}{}%
  \ifstrequal{#1}{bitvector_concat}{\sailvalbitvectorConcat}{}%
  \ifstrequal{#1}{bitvector\_concat}{\sailvalbitvectorConcat}{}%
  \ifstrequal{#1}{bitvector_length}{\sailvalbitvectorLength}{}%
  \ifstrequal{#1}{bitvector\_length}{\sailvalbitvectorLength}{}%
  \ifstrequal{#1}{bitvector_update}{\sailvalbitvectorUpdate}{}%
  \ifstrequal{#1}{bitvector\_update}{\sailvalbitvectorUpdate}{}%
  \ifstrequal{#1}{eq_bit}{\sailvaleqBit}{}%
  \ifstrequal{#1}{eq\_bit}{\sailvaleqBit}{}%
  \ifstrequal{#1}{eq_bits}{\sailvaleqBits}{}%
  \ifstrequal{#1}{eq\_bits}{\sailvaleqBits}{}%
  \ifstrequal{#1}{eq_bool}{\sailvaleqBool}{}%
  \ifstrequal{#1}{eq\_bool}{\sailvaleqBool}{}%
  \ifstrequal{#1}{eq_int}{\sailvaleqInt}{}%
  \ifstrequal{#1}{eq\_int}{\sailvaleqInt}{}%
  \ifstrequal{#1}{eq_unit}{\sailvaleqUnit}{}%
  \ifstrequal{#1}{eq\_unit}{\sailvaleqUnit}{}%
  \ifstrequal{#1}{fdiv_int}{\sailvalfdivInt}{}%
  \ifstrequal{#1}{fdiv\_int}{\sailvalfdivInt}{}%
  \ifstrequal{#1}{fmod_int}{\sailvalfmodInt}{}%
  \ifstrequal{#1}{fmod\_int}{\sailvalfmodInt}{}%
  \ifstrequal{#1}{gt_int}{\sailvalgtInt}{}%
  \ifstrequal{#1}{gt\_int}{\sailvalgtInt}{}%
  \ifstrequal{#1}{gteq_int}{\sailvalgteqInt}{}%
  \ifstrequal{#1}{gteq\_int}{\sailvalgteqInt}{}%
  \ifstrequal{#1}{is_none}{\sailvalisNone}{}%
  \ifstrequal{#1}{is\_none}{\sailvalisNone}{}%
  \ifstrequal{#1}{is_some}{\sailvalisSome}{}%
  \ifstrequal{#1}{is\_some}{\sailvalisSome}{}%
  \ifstrequal{#1}{lt_int}{\sailvalltInt}{}%
  \ifstrequal{#1}{lt\_int}{\sailvalltInt}{}%
  \ifstrequal{#1}{lteq_int}{\sailvallteqInt}{}%
  \ifstrequal{#1}{lteq\_int}{\sailvallteqInt}{}%
  \ifstrequal{#1}{mask}{\sailvalmask}{}%
  \ifstrequal{#1}{mult_atom}{\sailvalmultAtom}{}%
  \ifstrequal{#1}{mult\_atom}{\sailvalmultAtom}{}%
  \ifstrequal{#1}{mult_int}{\sailvalmultInt}{}%
  \ifstrequal{#1}{mult\_int}{\sailvalmultInt}{}%
  \ifstrequal{#1}{negate_atom}{\sailvalnegateAtom}{}%
  \ifstrequal{#1}{negate\_atom}{\sailvalnegateAtom}{}%
  \ifstrequal{#1}{negate_int}{\sailvalnegateInt}{}%
  \ifstrequal{#1}{negate\_int}{\sailvalnegateInt}{}%
  \ifstrequal{#1}{neq_bool}{\sailvalneqBool}{}%
  \ifstrequal{#1}{neq\_bool}{\sailvalneqBool}{}%
  \ifstrequal{#1}{neq_int}{\sailvalneqInt}{}%
  \ifstrequal{#1}{neq\_int}{\sailvalneqInt}{}%
  \ifstrequal{#1}{not_bool}{\sailvalnotBool}{}%
  \ifstrequal{#1}{not\_bool}{\sailvalnotBool}{}%
  \ifstrequal{#1}{or_bool}{\sailvalorBool}{}%
  \ifstrequal{#1}{or\_bool}{\sailvalorBool}{}%
  \ifstrequal{#1}{plain_vector_access}{\sailvalplainVectorAccess}{}%
  \ifstrequal{#1}{plain\_vector\_access}{\sailvalplainVectorAccess}{}%
  \ifstrequal{#1}{plain_vector_update}{\sailvalplainVectorUpdate}{}%
  \ifstrequal{#1}{plain\_vector\_update}{\sailvalplainVectorUpdate}{}%
  \ifstrequal{#1}{prerr_int}{\sailvalprerrInt}{}%
  \ifstrequal{#1}{prerr\_int}{\sailvalprerrInt}{}%
  \ifstrequal{#1}{print_bits}{\sailvalprintBits}{}%
  \ifstrequal{#1}{print\_bits}{\sailvalprintBits}{}%
  \ifstrequal{#1}{print_int}{\sailvalprintInt}{}%
  \ifstrequal{#1}{print\_int}{\sailvalprintInt}{}%
  \ifstrequal{#1}{replicate_bits}{\sailvalreplicateBits}{}%
  \ifstrequal{#1}{replicate\_bits}{\sailvalreplicateBits}{}%
  \ifstrequal{#1}{sign_extend}{\sailvalsignExtend}{}%
  \ifstrequal{#1}{sign\_extend}{\sailvalsignExtend}{}%
  \ifstrequal{#1}{signed}{\sailvalsigned}{}%
  \ifstrequal{#1}{sub_atom}{\sailvalsubAtom}{}%
  \ifstrequal{#1}{sub\_atom}{\sailvalsubAtom}{}%
  \ifstrequal{#1}{sub_int}{\sailvalsubInt}{}%
  \ifstrequal{#1}{sub\_int}{\sailvalsubInt}{}%
  \ifstrequal{#1}{sub_nat}{\sailvalsubNat}{}%
  \ifstrequal{#1}{sub\_nat}{\sailvalsubNat}{}%
  \ifstrequal{#1}{subrange_bits}{\sailvalsubrangeBits}{}%
  \ifstrequal{#1}{subrange\_bits}{\sailvalsubrangeBits}{}%
  \ifstrequal{#1}{tdiv_int}{\sailvaltdivInt}{}%
  \ifstrequal{#1}{tdiv\_int}{\sailvaltdivInt}{}%
  \ifstrequal{#1}{truncate}{\sailvaltruncate}{}%
  \ifstrequal{#1}{unsigned}{\sailvalunsigned}{}%
  \ifstrequal{#1}{update_subrange_bits}{\sailvalupdateSubrangeBits}{}%
  \ifstrequal{#1}{update\_subrange\_bits}{\sailvalupdateSubrangeBits}{}%
  \ifstrequal{#1}{vector_length}{\sailvalvectorLength}{}%
  \ifstrequal{#1}{vector\_length}{\sailvalvectorLength}{}%
  \ifstrequal{#1}{zero_extend}{\sailvalzzeroExtend}{}%
  \ifstrequal{#1}{zero\_extend}{\sailvalzzeroExtend}{}%
  \ifstrequal{#1}{zeros}{\sailvalzzeros}{}}

\newcommand{\sailrefval}[2]{
  \ifstrequal{#1}{__bitfield_deref}{\hyperref[sailzzyzybitfieldzyderef]{#2}}{}%
  \ifstrequal{#1}{\_\_bitfield\_deref}{\hyperref[sailzzyzybitfieldzyderef]{#2}}{}%
  \ifstrequal{#1}{__deref}{\hyperref[sailzzyzyderef]{#2}}{}%
  \ifstrequal{#1}{\_\_deref}{\hyperref[sailzzyzyderef]{#2}}{}%
  \ifstrequal{#1}{__id}{\hyperref[sailzzyzyid]{#2}}{}%
  \ifstrequal{#1}{\_\_id}{\hyperref[sailzzyzyid]{#2}}{}%
  \ifstrequal{#1}{_shl1}{\hyperref[sailzzyshl1]{#2}}{}%
  \ifstrequal{#1}{\_shl1}{\hyperref[sailzzyshl1]{#2}}{}%
  \ifstrequal{#1}{_shl32}{\hyperref[sailzzyshl32]{#2}}{}%
  \ifstrequal{#1}{\_shl32}{\hyperref[sailzzyshl32]{#2}}{}%
  \ifstrequal{#1}{_shl8}{\hyperref[sailzzyshl8]{#2}}{}%
  \ifstrequal{#1}{\_shl8}{\hyperref[sailzzyshl8]{#2}}{}%
  \ifstrequal{#1}{_shl_int}{\hyperref[sailzzyshlzyint]{#2}}{}%
  \ifstrequal{#1}{\_shl\_int}{\hyperref[sailzzyshlzyint]{#2}}{}%
  \ifstrequal{#1}{_shl_int_general}{\hyperref[sailzzyshlzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{\_shl\_int\_general}{\hyperref[sailzzyshlzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{_shr32}{\hyperref[sailzzyshr32]{#2}}{}%
  \ifstrequal{#1}{\_shr32}{\hyperref[sailzzyshr32]{#2}}{}%
  \ifstrequal{#1}{_shr_int}{\hyperref[sailzzyshrzyint]{#2}}{}%
  \ifstrequal{#1}{\_shr\_int}{\hyperref[sailzzyshrzyint]{#2}}{}%
  \ifstrequal{#1}{_shr_int_general}{\hyperref[sailzzyshrzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{\_shr\_int\_general}{\hyperref[sailzzyshrzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{_tmod_int}{\hyperref[sailzzytmodzyint]{#2}}{}%
  \ifstrequal{#1}{\_tmod\_int}{\hyperref[sailzzytmodzyint]{#2}}{}%
  \ifstrequal{#1}{_tmod_int_positive}{\hyperref[sailzzytmodzyintzypositive]{#2}}{}%
  \ifstrequal{#1}{\_tmod\_int\_positive}{\hyperref[sailzzytmodzyintzypositive]{#2}}{}%
  \ifstrequal{#1}{abs_int_plain}{\hyperref[sailzabszyintzyplain]{#2}}{}%
  \ifstrequal{#1}{abs\_int\_plain}{\hyperref[sailzabszyintzyplain]{#2}}{}%
  \ifstrequal{#1}{add_atom}{\hyperref[sailzaddzyatom]{#2}}{}%
  \ifstrequal{#1}{add\_atom}{\hyperref[sailzaddzyatom]{#2}}{}%
  \ifstrequal{#1}{add_bits}{\hyperref[sailzaddzybits]{#2}}{}%
  \ifstrequal{#1}{add\_bits}{\hyperref[sailzaddzybits]{#2}}{}%
  \ifstrequal{#1}{add_bits_int}{\hyperref[sailzaddzybitszyint]{#2}}{}%
  \ifstrequal{#1}{add\_bits\_int}{\hyperref[sailzaddzybitszyint]{#2}}{}%
  \ifstrequal{#1}{add_int}{\hyperref[sailzaddzyint]{#2}}{}%
  \ifstrequal{#1}{add\_int}{\hyperref[sailzaddzyint]{#2}}{}%
  \ifstrequal{#1}{and_bool}{\hyperref[sailzandzybool]{#2}}{}%
  \ifstrequal{#1}{and\_bool}{\hyperref[sailzandzybool]{#2}}{}%
  \ifstrequal{#1}{and_bool_no_flow}{\hyperref[sailzandzyboolzynozyflow]{#2}}{}%
  \ifstrequal{#1}{and\_bool\_no\_flow}{\hyperref[sailzandzyboolzynozyflow]{#2}}{}%
  \ifstrequal{#1}{append_64}{\hyperref[sailzappendzy64]{#2}}{}%
  \ifstrequal{#1}{append\_64}{\hyperref[sailzappendzy64]{#2}}{}%
  \ifstrequal{#1}{bitvector_access}{\hyperref[sailzbitvectorzyaccess]{#2}}{}%
  \ifstrequal{#1}{bitvector\_access}{\hyperref[sailzbitvectorzyaccess]{#2}}{}%
  \ifstrequal{#1}{bitvector_concat}{\hyperref[sailzbitvectorzyconcat]{#2}}{}%
  \ifstrequal{#1}{bitvector\_concat}{\hyperref[sailzbitvectorzyconcat]{#2}}{}%
  \ifstrequal{#1}{bitvector_length}{\hyperref[sailzbitvectorzylength]{#2}}{}%
  \ifstrequal{#1}{bitvector\_length}{\hyperref[sailzbitvectorzylength]{#2}}{}%
  \ifstrequal{#1}{bitvector_update}{\hyperref[sailzbitvectorzyupdate]{#2}}{}%
  \ifstrequal{#1}{bitvector\_update}{\hyperref[sailzbitvectorzyupdate]{#2}}{}%
  \ifstrequal{#1}{eq_bit}{\hyperref[sailzeqzybit]{#2}}{}%
  \ifstrequal{#1}{eq\_bit}{\hyperref[sailzeqzybit]{#2}}{}%
  \ifstrequal{#1}{eq_bits}{\hyperref[sailzeqzybits]{#2}}{}%
  \ifstrequal{#1}{eq\_bits}{\hyperref[sailzeqzybits]{#2}}{}%
  \ifstrequal{#1}{eq_bool}{\hyperref[sailzeqzybool]{#2}}{}%
  \ifstrequal{#1}{eq\_bool}{\hyperref[sailzeqzybool]{#2}}{}%
  \ifstrequal{#1}{eq_int}{\hyperref[sailzeqzyint]{#2}}{}%
  \ifstrequal{#1}{eq\_int}{\hyperref[sailzeqzyint]{#2}}{}%
  \ifstrequal{#1}{eq_unit}{\hyperref[sailzeqzyunit]{#2}}{}%
  \ifstrequal{#1}{eq\_unit}{\hyperref[sailzeqzyunit]{#2}}{}%
  \ifstrequal{#1}{fdiv_int}{\hyperref[sailzfdivzyint]{#2}}{}%
  \ifstrequal{#1}{fdiv\_int}{\hyperref[sailzfdivzyint]{#2}}{}%
  \ifstrequal{#1}{fmod_int}{\hyperref[sailzfmodzyint]{#2}}{}%
  \ifstrequal{#1}{fmod\_int}{\hyperref[sailzfmodzyint]{#2}}{}%
  \ifstrequal{#1}{gt_int}{\hyperref[sailzgtzyint]{#2}}{}%
  \ifstrequal{#1}{gt\_int}{\hyperref[sailzgtzyint]{#2}}{}%
  \ifstrequal{#1}{gteq_int}{\hyperref[sailzgteqzyint]{#2}}{}%
  \ifstrequal{#1}{gteq\_int}{\hyperref[sailzgteqzyint]{#2}}{}%
  \ifstrequal{#1}{is_none}{\hyperref[sailziszynone]{#2}}{}%
  \ifstrequal{#1}{is\_none}{\hyperref[sailziszynone]{#2}}{}%
  \ifstrequal{#1}{is_some}{\hyperref[sailziszysome]{#2}}{}%
  \ifstrequal{#1}{is\_some}{\hyperref[sailziszysome]{#2}}{}%
  \ifstrequal{#1}{lt_int}{\hyperref[sailzltzyint]{#2}}{}%
  \ifstrequal{#1}{lt\_int}{\hyperref[sailzltzyint]{#2}}{}%
  \ifstrequal{#1}{lteq_int}{\hyperref[sailzlteqzyint]{#2}}{}%
  \ifstrequal{#1}{lteq\_int}{\hyperref[sailzlteqzyint]{#2}}{}%
  \ifstrequal{#1}{mask}{\hyperref[sailzmask]{#2}}{}%
  \ifstrequal{#1}{mult_atom}{\hyperref[sailzmultzyatom]{#2}}{}%
  \ifstrequal{#1}{mult\_atom}{\hyperref[sailzmultzyatom]{#2}}{}%
  \ifstrequal{#1}{mult_int}{\hyperref[sailzmultzyint]{#2}}{}%
  \ifstrequal{#1}{mult\_int}{\hyperref[sailzmultzyint]{#2}}{}%
  \ifstrequal{#1}{negate_atom}{\hyperref[sailznegatezyatom]{#2}}{}%
  \ifstrequal{#1}{negate\_atom}{\hyperref[sailznegatezyatom]{#2}}{}%
  \ifstrequal{#1}{negate_int}{\hyperref[sailznegatezyint]{#2}}{}%
  \ifstrequal{#1}{negate\_int}{\hyperref[sailznegatezyint]{#2}}{}%
  \ifstrequal{#1}{neq_bool}{\hyperref[sailzneqzybool]{#2}}{}%
  \ifstrequal{#1}{neq\_bool}{\hyperref[sailzneqzybool]{#2}}{}%
  \ifstrequal{#1}{neq_int}{\hyperref[sailzneqzyint]{#2}}{}%
  \ifstrequal{#1}{neq\_int}{\hyperref[sailzneqzyint]{#2}}{}%
  \ifstrequal{#1}{not_bool}{\hyperref[sailznotzybool]{#2}}{}%
  \ifstrequal{#1}{not\_bool}{\hyperref[sailznotzybool]{#2}}{}%
  \ifstrequal{#1}{or_bool}{\hyperref[sailzorzybool]{#2}}{}%
  \ifstrequal{#1}{or\_bool}{\hyperref[sailzorzybool]{#2}}{}%
  \ifstrequal{#1}{plain_vector_access}{\hyperref[sailzplainzyvectorzyaccess]{#2}}{}%
  \ifstrequal{#1}{plain\_vector\_access}{\hyperref[sailzplainzyvectorzyaccess]{#2}}{}%
  \ifstrequal{#1}{plain_vector_update}{\hyperref[sailzplainzyvectorzyupdate]{#2}}{}%
  \ifstrequal{#1}{plain\_vector\_update}{\hyperref[sailzplainzyvectorzyupdate]{#2}}{}%
  \ifstrequal{#1}{prerr_int}{\hyperref[sailzprerrzyint]{#2}}{}%
  \ifstrequal{#1}{prerr\_int}{\hyperref[sailzprerrzyint]{#2}}{}%
  \ifstrequal{#1}{print_bits}{\hyperref[sailzprintzybits]{#2}}{}%
  \ifstrequal{#1}{print\_bits}{\hyperref[sailzprintzybits]{#2}}{}%
  \ifstrequal{#1}{print_int}{\hyperref[sailzprintzyint]{#2}}{}%
  \ifstrequal{#1}{print\_int}{\hyperref[sailzprintzyint]{#2}}{}%
  \ifstrequal{#1}{replicate_bits}{\hyperref[sailzreplicatezybits]{#2}}{}%
  \ifstrequal{#1}{replicate\_bits}{\hyperref[sailzreplicatezybits]{#2}}{}%
  \ifstrequal{#1}{sign_extend}{\hyperref[sailzsignzyextend]{#2}}{}%
  \ifstrequal{#1}{sign\_extend}{\hyperref[sailzsignzyextend]{#2}}{}%
  \ifstrequal{#1}{signed}{\hyperref[sailzsigned]{#2}}{}%
  \ifstrequal{#1}{sub_atom}{\hyperref[sailzsubzyatom]{#2}}{}%
  \ifstrequal{#1}{sub\_atom}{\hyperref[sailzsubzyatom]{#2}}{}%
  \ifstrequal{#1}{sub_int}{\hyperref[sailzsubzyint]{#2}}{}%
  \ifstrequal{#1}{sub\_int}{\hyperref[sailzsubzyint]{#2}}{}%
  \ifstrequal{#1}{sub_nat}{\hyperref[sailzsubzynat]{#2}}{}%
  \ifstrequal{#1}{sub\_nat}{\hyperref[sailzsubzynat]{#2}}{}%
  \ifstrequal{#1}{subrange_bits}{\hyperref[sailzsubrangezybits]{#2}}{}%
  \ifstrequal{#1}{subrange\_bits}{\hyperref[sailzsubrangezybits]{#2}}{}%
  \ifstrequal{#1}{tdiv_int}{\hyperref[sailztdivzyint]{#2}}{}%
  \ifstrequal{#1}{tdiv\_int}{\hyperref[sailztdivzyint]{#2}}{}%
  \ifstrequal{#1}{truncate}{\hyperref[sailztruncate]{#2}}{}%
  \ifstrequal{#1}{unsigned}{\hyperref[sailzunsigned]{#2}}{}%
  \ifstrequal{#1}{update_subrange_bits}{\hyperref[sailzupdatezysubrangezybits]{#2}}{}%
  \ifstrequal{#1}{update\_subrange\_bits}{\hyperref[sailzupdatezysubrangezybits]{#2}}{}%
  \ifstrequal{#1}{vector_length}{\hyperref[sailzvectorzylength]{#2}}{}%
  \ifstrequal{#1}{vector\_length}{\hyperref[sailzvectorzylength]{#2}}{}%
  \ifstrequal{#1}{zero_extend}{\hyperref[sailzzzerozyextend]{#2}}{}%
  \ifstrequal{#1}{zero\_extend}{\hyperref[sailzzzerozyextend]{#2}}{}%
  \ifstrequal{#1}{zeros}{\hyperref[sailzzzeros]{#2}}{}}

\newcommand{\sailfn}[1]{
  \ifstrequal{#1}{__id}{\sailfnId}{}%
  \ifstrequal{#1}{\_\_id}{\sailfnId}{}%
  \ifstrequal{#1}{_shl_int_general}{\sailfnShlIntGeneral}{}%
  \ifstrequal{#1}{\_shl\_int\_general}{\sailfnShlIntGeneral}{}%
  \ifstrequal{#1}{_shr_int_general}{\sailfnShrIntGeneral}{}%
  \ifstrequal{#1}{\_shr\_int\_general}{\sailfnShrIntGeneral}{}%
  \ifstrequal{#1}{eq_unit}{\sailfneqUnit}{}%
  \ifstrequal{#1}{eq\_unit}{\sailfneqUnit}{}%
  \ifstrequal{#1}{fdiv_int}{\sailfnfdivInt}{}%
  \ifstrequal{#1}{fdiv\_int}{\sailfnfdivInt}{}%
  \ifstrequal{#1}{fmod_int}{\sailfnfmodInt}{}%
  \ifstrequal{#1}{fmod\_int}{\sailfnfmodInt}{}%
  \ifstrequal{#1}{is_none}{\sailfnisNone}{}%
  \ifstrequal{#1}{is\_none}{\sailfnisNone}{}%
  \ifstrequal{#1}{is_some}{\sailfnisSome}{}%
  \ifstrequal{#1}{is\_some}{\sailfnisSome}{}%
  \ifstrequal{#1}{mask}{\sailfnmask}{}%
  \ifstrequal{#1}{neq_bool}{\sailfnneqBool}{}%
  \ifstrequal{#1}{neq\_bool}{\sailfnneqBool}{}%
  \ifstrequal{#1}{neq_int}{\sailfnneqInt}{}%
  \ifstrequal{#1}{neq\_int}{\sailfnneqInt}{}}

\newcommand{\sailreffn}[2]{
  \ifstrequal{#1}{__id}{\hyperref[sailfnzzyzyid]{#2}}{}%
  \ifstrequal{#1}{\_\_id}{\hyperref[sailfnzzyzyid]{#2}}{}%
  \ifstrequal{#1}{_shl_int_general}{\hyperref[sailfnzzyshlzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{\_shl\_int\_general}{\hyperref[sailfnzzyshlzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{_shr_int_general}{\hyperref[sailfnzzyshrzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{\_shr\_int\_general}{\hyperref[sailfnzzyshrzyintzygeneral]{#2}}{}%
  \ifstrequal{#1}{eq_unit}{\hyperref[sailfnzeqzyunit]{#2}}{}%
  \ifstrequal{#1}{eq\_unit}{\hyperref[sailfnzeqzyunit]{#2}}{}%
  \ifstrequal{#1}{fdiv_int}{\hyperref[sailfnzfdivzyint]{#2}}{}%
  \ifstrequal{#1}{fdiv\_int}{\hyperref[sailfnzfdivzyint]{#2}}{}%
  \ifstrequal{#1}{fmod_int}{\hyperref[sailfnzfmodzyint]{#2}}{}%
  \ifstrequal{#1}{fmod\_int}{\hyperref[sailfnzfmodzyint]{#2}}{}%
  \ifstrequal{#1}{is_none}{\hyperref[sailfnziszynone]{#2}}{}%
  \ifstrequal{#1}{is\_none}{\hyperref[sailfnziszynone]{#2}}{}%
  \ifstrequal{#1}{is_some}{\hyperref[sailfnziszysome]{#2}}{}%
  \ifstrequal{#1}{is\_some}{\hyperref[sailfnziszysome]{#2}}{}%
  \ifstrequal{#1}{mask}{\hyperref[sailfnzmask]{#2}}{}%
  \ifstrequal{#1}{neq_bool}{\hyperref[sailfnzneqzybool]{#2}}{}%
  \ifstrequal{#1}{neq\_bool}{\hyperref[sailfnzneqzybool]{#2}}{}%
  \ifstrequal{#1}{neq_int}{\hyperref[sailfnzneqzyint]{#2}}{}%
  \ifstrequal{#1}{neq\_int}{\hyperref[sailfnzneqzyint]{#2}}{}}

\newcommand{\sailtype}[1]{
  \ifstrequal{#1}{bits}{\sailtypebits}{}%
  \ifstrequal{#1}{option}{\sailtypeoption}{}}

\newcommand{\sailreftype}[2]{
  \ifstrequal{#1}{bits}{\hyperref[sailtypezbits]{#2}}{}%
  \ifstrequal{#1}{option}{\hyperref[sailtypezoption]{#2}}{}}

\newcommand{\saillet}[1]{
  }

\newcommand{\sailreflet}[2]{
  }

\newcommand{\sailregister}[1]{
  \ifstrequal{#1}{big}{\sailregisterbig}{}%
  \ifstrequal{#1}{small}{\sailregistersmall}{}}

\newcommand{\sailrefregister}[2]{
  \ifstrequal{#1}{big}{\hyperref[sailregisterzbig]{#2}}{}%
  \ifstrequal{#1}{small}{\hyperref[sailregisterzsmall]{#2}}{}}
